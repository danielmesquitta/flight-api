basePath: /api
definitions:
  dto.ErrorItem:
    properties:
      name:
        type: string
      reason:
        type: string
    type: object
  dto.ErrorResponse:
    properties:
      errors:
        items:
          $ref: '#/definitions/dto.ErrorItem'
        type: array
      message:
        type: string
    type: object
  dto.FlightSearchResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/entity.Flight'
        type: array
    type: object
  dto.HealthResponse:
    properties:
      status:
        type: string
    type: object
  dto.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  dto.LoginResponse:
    properties:
      access_token:
        type: string
    type: object
  entity.Flight:
    properties:
      arrival_at:
        type: string
      departure_at:
        type: string
      destination:
        type: string
      duration:
        type: integer
      flight_number:
        type: string
      id:
        type: string
      is_cheapest:
        type: boolean
      is_fastest:
        type: boolean
      origin:
        type: string
      price:
        type: integer
    type: object
info:
  contact:
    email: danielmesquitta123@gmail.com
    name: Daniel Mesquita
  description: Flight API
  title: Flight API
  version: "1.0"
paths:
  /health:
    get:
      consumes:
      - application/json
      description: Health check
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.HealthResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Health check
      tags:
      - Health
  /v1/auth/login:
    post:
      consumes:
      - application/json
      description: Use e-mail and password to login
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Login
      tags:
      - Auth
  /v1/flights/search:
    get:
      consumes:
      - application/json
      description: Search for flights based on origin, destination, and date
      parameters:
      - description: Origin airport code
        in: query
        name: origin
        required: true
        type: string
      - description: Destination airport code
        in: query
        name: destination
        required: true
        type: string
      - description: Departure date (YYYY-MM-DD)
        in: query
        name: date
        required: true
        type: string
      - description: Sort by field (price or duration)
        in: query
        name: sort_by
        type: string
      - description: Sort order (asc or desc)
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.FlightSearchResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Flight search
      tags:
      - Flight
securityDefinitions:
  BasicAuth:
    type: basic
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
