// Code generated by Wire. DO NOT EDIT.

//go:build wireinject
// +build wireinject

package server

import (
	"github.com/danielmesquitta/flight-api/internal/app/server/handler"
	"github.com/danielmesquitta/flight-api/internal/app/server/middleware"
	"github.com/danielmesquitta/flight-api/internal/app/server/router"
	"github.com/danielmesquitta/flight-api/internal/config/env"
	"github.com/danielmesquitta/flight-api/internal/domain/usecase/auth"
	"github.com/danielmesquitta/flight-api/internal/domain/usecase/flight"
	"github.com/danielmesquitta/flight-api/internal/pkg/jwtutil"
	"github.com/danielmesquitta/flight-api/internal/pkg/validator"
	"github.com/danielmesquitta/flight-api/internal/provider/cache"
	"github.com/danielmesquitta/flight-api/internal/provider/cache/rediscache"
	"github.com/danielmesquitta/flight-api/internal/provider/flightapi"
	"github.com/danielmesquitta/flight-api/internal/provider/flightapi/amadeusapi"
	"github.com/danielmesquitta/flight-api/internal/provider/flightapi/serpapi"
	"github.com/google/wire"
	"testing"
)

// NewDev wires up the application in dev mode.
func NewDev(
	v validator.Validator,
	e *env.Env,
	t *testing.T,
) *App {
	wire.Build(
		// Add any development-specific providers here
		jwtutil.NewJWT,
		amadeusapi.NewAmadeusAPI,
		serpapi.NewSerpAPI,
		flightapi.NewFlightAPIs,
		wire.Bind(new(cache.Cache), new(*rediscache.RedisCache)),
		rediscache.NewRedisCache,
		flight.NewSearchFlightUseCase,
		auth.NewLoginUseCase,
		handler.NewDocHandler,
		handler.NewHealthHandler,
		handler.NewFlightHandler,
		handler.NewAuthHandler,
		middleware.NewMiddleware,
		router.NewRouter,
		Build,
	)
	return &App{}
}

// NewStaging wires up the application in staging mode.
func NewStaging(
	v validator.Validator,
	e *env.Env,
	t *testing.T,
) *App {
	wire.Build(
		// Add any staging-specific providers here
		jwtutil.NewJWT,
		amadeusapi.NewAmadeusAPI,
		serpapi.NewSerpAPI,
		flightapi.NewFlightAPIs,
		wire.Bind(new(cache.Cache), new(*rediscache.RedisCache)),
		rediscache.NewRedisCache,
		flight.NewSearchFlightUseCase,
		auth.NewLoginUseCase,
		handler.NewDocHandler,
		handler.NewHealthHandler,
		handler.NewFlightHandler,
		handler.NewAuthHandler,
		middleware.NewMiddleware,
		router.NewRouter,
		Build,
	)
	return &App{}
}

// NewTest wires up the application in test mode.
func NewTest(
	v validator.Validator,
	e *env.Env,
	t *testing.T,
) *App {
	wire.Build(
		// Add any test-specific providers here
		jwtutil.NewJWT,
		amadeusapi.NewAmadeusAPI,
		serpapi.NewSerpAPI,
		flightapi.NewFlightAPIs,
		wire.Bind(new(cache.Cache), new(*rediscache.RedisCache)),
		rediscache.NewRedisCache,
		flight.NewSearchFlightUseCase,
		auth.NewLoginUseCase,
		handler.NewDocHandler,
		handler.NewHealthHandler,
		handler.NewFlightHandler,
		handler.NewAuthHandler,
		middleware.NewMiddleware,
		router.NewRouter,
		Build,
	)
	return &App{}
}

// NewProd wires up the application in prod mode.
func NewProd(
	v validator.Validator,
	e *env.Env,
	t *testing.T,
) *App {
	wire.Build(
		// Add any production-specific providers here
		jwtutil.NewJWT,
		amadeusapi.NewAmadeusAPI,
		serpapi.NewSerpAPI,
		flightapi.NewFlightAPIs,
		wire.Bind(new(cache.Cache), new(*rediscache.RedisCache)),
		rediscache.NewRedisCache,
		flight.NewSearchFlightUseCase,
		auth.NewLoginUseCase,
		handler.NewDocHandler,
		handler.NewHealthHandler,
		handler.NewFlightHandler,
		handler.NewAuthHandler,
		middleware.NewMiddleware,
		router.NewRouter,
		Build,
	)
	return &App{}
}
